class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        if(strs.length==0) return new ArrayList();
        HashMap<String, List> answer = new HashMap<String, List>();
        for(String s:strs){
            char[] cars = s.toCharArray();
            Arrays.sort(cars);
            String key = String.valueOf(cars);
            if(!answer.containsKey(key)){
                answer.put(key, new ArrayList());
            }
                answer.get(key).add(s);
            
        } return new ArrayList(answer.values());
    }
}
---------------------------------------------------------------------------------------------------------------
class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        if(strs.length == 0) return new ArrayList();
        HashMap <String, List> answer = new HashMap<>();
        for(String s:strs){
            int[] count = new int[26];
            Arrays.fill(count,0);
            for(char c:s.toCharArray()){
                count[c - 'a']++;
            }
            StringBuilder sb = new StringBuilder();
            for(int i=0;i<26;i++){
                sb.append('#');
                sb.append(count[i]);
            }
            String key = sb.toString();
            
            if(!answer.containsKey(key)) answer.put(key, new ArrayList());
            answer.get(key).add(s);
        } return new ArrayList(answer.values());
    }
}

-----------------------------------------------------------------------------------------------------
