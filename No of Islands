// https://www.youtube.com/watch?v=o8S2bO3pmO4

class Solution {
    public int numIslands(char[][] grid) {
        int noOfIslands = 0;
        for(int i=0; i< grid.length; i++){
            for(int j=0; j<grid[0].length; j++){
                if(grid[i][j] == '1'){
                    noOfIslands += helper(grid,i,j);
                        
                }
            }
        } return noOfIslands;
    }
    
    public int helper(char[][] grid, int i, int j){
        
        // Check for invalid indices and for sites that aren't land
        if(i<0 || i>=grid.length || j<0 || j>=grid[0].length || grid[i][j]== '0') return 0;
        
        grid[i][j] = '0'; //sunking of an island or island as visited
        // Check all adjacent sites
        helper(grid, i+1, j);
        helper(grid, i-1, j);
        helper(grid, i, j+1);
        helper(grid, i, j-1);
        return 1;                                                  
    }
}
-------------------------------------------------------------------------------------------------------------
