/*
Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]
Note:

You must do this in-place without making a copy of the array.
Minimize the total number of operations.

*/


class Solution {
    public void moveZeroes(int[] nums) {
       int count = 0;
        int l = nums.length;
        for(int i =0; i<l; i++){
            if(nums[i]!=0){ // if this digit is not a zero
                nums[i-count]= nums[i]; // Move non zero items to the left
            }
            else count++; // else increasing the count of zeros
        }
        if(count>0){ // only if there are zeros
           for(int i=l-1; i>=l-count; i--){ // filling zeros(number equal to count) at the end of the array
               nums[i]=0;
           } 
        } 
    }
}

Time: O(n) n= no of elements
Space: O(1)
