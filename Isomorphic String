// Not domne yet, just for the record

Example 1:
Input: s = "egg", t = "add"
Output: true
Example 2:

Input: s = "foo", t = "bar"
Output: false
Example 3:

Input: s = "paper", t = "title"
Output: true

// The idea is that we need to map a char to another one, for example, "egg" and "add", we need to constract the mapping 'e' 
// -> 'a' and 'g' -> 'd'. Instead of directly mapping 'e' to 'a', another way is to mark them with same value, for example, 'e' 
// -> 1, 'a'-> 1, and 'g' -> 2, 'd' -> 2, this works same.


// So we use two arrays here m1 and m2, initialized space is 256 (Since the whole ASCII size is 256, 128 also works here). 
// Traverse the character of both s and t on the same position, if their mapping values in m1 and m2 are different, means 
// they are not mapping correctly, returen false; else we construct the mapping, 

class Solution {
public:
    bool isIsomorphic(string s, string t) {
        int len = s.length();
        int m1[256], m2[256];
        for (int i = 0; i < 256; i++) {
            m1[i] = m2[i] = -1;
        }
        
        for (int i = 0; i < len; i++) {
            if (m1[s[i]] != m2[t[i]]) return false;
            m1[s[i]] = m2[t[i]] = i;
        }
        return true;
    }
};
