class Solution {
    public int eraseOverlapIntervals(int[][] intervals) {
        if(intervals.length==0) return 0;
        Arrays.sort(intervals, (int[] a, int[] b) -> (a[1]-b[1]));
        int count=1;
        int latestEnd = intervals[0][1];
        for(int i=1; i<intervals.length; i++){
            if(intervals[i][0]>=latestEnd){
                count++;
                latestEnd = intervals[i][1];
            }
        } return intervals.length-count;
    }
}

Time complexity : O\big(n \log(n)\big)O(nlog(n)). Sorting takes O\big(n \log(n)\big)O(nlog(n)) time.

Space complexity : O(1)O(1). No extra space is used.
