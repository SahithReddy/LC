//Video: https://www.youtube.com/watch?v=St47WCbQa9M&list=PLi9RQVmJD2fZgRyOunLyt94uVbJL43pZ_

class Solution {
    public int firstUniqChar(String s) {
        HashMap<Character,Integer> map = new HashMap<Character,Integer>();
        for(int i=0; i<s.length(); i++){
            if(!map.containsKey(s.charAt(i))){
                map.put(s.charAt(i), i);
            }
            else{
            map.put(s.charAt(i), -1);
            }
        }
        
        int min = Integer.MAX_VALUE;
        for(char c: map.keySet()){
            if(map.get(c) > -1 && map.get(c) < min){
                min = map.get(c);
            }
        }
        return min==Integer.MAX_VALUE? -1: min;
    }
}

Time: O(n) one whole iteration of the string
Space: space complexity is constant O(26) ~ O(1) for any length of string
