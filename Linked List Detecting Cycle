public class Solution {
    public boolean hasCycle(ListNode head) {
        Set<ListNode> seenNode = new HashSet<ListNode>();
        while(head!=null){
            if(seenNode.contains(head)){
                return true;
            }
            else seenNode.add(head);
            head = head.next;
        } return false;
    }
}
-----------------------------------------------------------------------------------------
public class Solution {
    public boolean hasCycle(ListNode head) {
    ListNode fast = head;
    ListNode slow = head;
    while(fast!= null && fast.next!= null){
        slow = slow.next;
        fast = fast.next.next;
        if(slow == fast){
            return true;
        }
    } return false;
}
}
---------------------------------------------------------------------------------------------
