Input : "Welcome to geeksforgeeks"
Output : "geeksforgeeks to Welcome"

Input : "I love Java Programming"
Output :"Programming Java love I"

---------------------------------------------------------------------------------------------------------------------------------------
class Solution {
  public String reverseWords(String s) {
    // remove leading spaces
    s = s.trim();
    // split by multiple spaces
    List<String> wordList = Arrays.asList(s.split("\\s+"));
    Collections.reverse(wordList);
    return String.join(" ", wordList);
  }
}

"\s" is a regex class for any kind of whitespace (space, tab, newline, etc). Since Java uses "\" as an escape 
character in strings (e.g. for newlines: "\n"), we need to escape the escape character ;-) So it becomes "\\s". 
The "+" means one or more of them.

Time complexity: O(N), where N is a number of characters in the input string.

Space complexity: O(N), to store the result of split by spaces.
---------------------------------------------------------------------------------------------------------------------------------------
Same as above but a littel different
String[] parts = s.trim().split("\\s+");
String out = "";
for (int i = parts.length - 1; i > 0; i--) {
    out += parts[i] + " ";
}
return out + parts[0];
---------------------------------------------------------------------------------------------------------
// https://leetcode.com/problems/reverse-words-in-a-string/solution/ -- More Solutions without using inbuilt functions.
