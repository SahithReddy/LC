
class Solution {
    public String longestPalindrome(String s) {
        int start = 0;
        int end = 0;
        if(s==null || s.length()<1) return "";
        for(int i=0;i<s.length()-1;i++){
        int len = Math.max(expandFromCenter(s,i,i), expandFromCenter(s,i,i+1));
            System.out.println("NEW LENGTH here is: " +len);
        if(len > end-start){
              start = i - ((len-1)/2);
                end = i + (len/2);
            }
            System.out.println("START here is: " +start);
            System.out.println("END here is: " +end);
        }
        return s.substring(start,end+1);
        
    }
        
        public int expandFromCenter(String s, int j, int k){
            if(s == null || j>k) return 0;
            while(j>=0 && k<s.length() && s.charAt(j)==s.charAt(k)){
                j--;
                k++;
            }
            System.out.println("J here is: " +j);
            System.out.println("K here is: " +k);
            System.out.println("RETURN VALUE here is: " +(k-j-1));
            return k-j-1;
            
        }
    }
 Explanation: https://www.youtube.com/watch?v=y2BD4MJqV20
