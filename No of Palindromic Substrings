// The best solution without class/global variables. Idea is start from each index and 
try to extend palindrome for both odd and even length.


class Solution {
    public int countSubstrings(String s) {
        int count=0;
        for(int i=0;i<s.length();i++){
            count+=expandAroundCorner(s,i,i);
            count+=expandAroundCorner(s,i,i+1);
        }
        return count;
    }
        
        public int expandAroundCorner(String s, int left, int right){
            int count=0;
            while(left>=0 && right<s.length() && (s.charAt(left) == s.charAt(right))){
                left--;
                right++;
                count++;
            }
            return count;
        }
}
Time: O(n^2), Space O(1);

Very Good Explanation: 
https://leetcode.com/problems/palindromic-substrings/discuss/105688/Very-Simple-Java-Solution-with-Detail-Explanation
------------------------------------------------------------------------------------------------

