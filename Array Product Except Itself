// https://leetcode.com/problems/product-of-array-except-self/solution/
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int length = nums.length;
        int[] left = new int[length];
        int[] right = new int[length];
        int[] answer = new int[length];
        
        left[0]=1;
        for(int i=1;i<length;i++){
            left[i]=left[i-1]*nums[i-1];
        }
        right[length-1]=1;
        for(int j=length-2;j>=0;j--){
            right[j]=right[j+1]*nums[j+1];
        }
        
        for(int k=0;k<length;k++){
            answer[k]=left[k]*right[k];
        }
        return answer;
    }
}
----------------------------------------------------------------------------------------------------------
// O(1) space as used only one array apart form the the answer array
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int length = nums.length;
        int[] right = new int[length];
        int[] answer = new int[length];
        
        answer[0]=1;
        for(int i=1;i<length;i++){
            answer[i]=answer[i-1]*nums[i-1];
        }
        
        int r=1;
        for(int i=length-1;i>=0;i--){
            answer[i]=answer[i]*r;
            r=r*nums[i];
        }
        return answer;
    }
}
